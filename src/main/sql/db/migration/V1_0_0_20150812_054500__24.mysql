
create table harmony.problem_type (
  id				    int(11)			not null auto_increment,
  type_code				varchar(100)	not null,
  descr				    varchar(200)	not null,
  creation_date         timestamp    	not null default current_timestamp,
  last_modified_date    timestamp    	not null default current_timestamp,
  version               int(11)			not null default '0',
  primary key (id),
  unique index problem_type_uk (type_code)
)
  engine =innodb;

  
create table harmony.ticket_config (
  id				    int(11)			not null auto_increment,
  problem_type_id	    int(11)			not null,
  robot_name		    varchar(200)	not null default 'any robot',
  action_required       varchar(500)    not null,
  auto_expire_min	    int(11)			not null,
  creation_date         timestamp    	not null default current_timestamp,
  last_modified_date    timestamp    	not null default current_timestamp,
  version               int(11)   		not null default '0',
  primary key (id),
  foreign key (problem_type_id) references problem_type(id),
  unique index ticket_config_uk (problem_type_id, robot_name),
  index ticket_config_fk_problem_type (problem_type_id)
)
  engine =innodb;


create table harmony.agent (
  id				    int(11)	 		not null auto_increment,
  first_name		    varchar(200) 	not null,
  last_name			    varchar(200) 	not null,
  manager_agent_id	    int(11),
  effective_date        timestamp    	not null default current_timestamp,
  end_date              timestamp,
  creation_date         timestamp    	not null default current_timestamp,
  last_modified_date    timestamp    	not null default current_timestamp,
  version               int(11)   		not null default '0',
  primary key (id),
  foreign key (manager_agent_id) references agent(id),
  index agent_fk_agent_manager (manager_agent_id)
)
  engine =innodb;


create table harmony.booking_info (
  id				  	int(11)			not null auto_increment,
  booking_id		  	int(11)			not null,
  creation_date         timestamp  		not null default current_timestamp,
  last_modified_date    timestamp    	not null default current_timestamp,
  version             	int(11)   		not null default '0',
  primary key (id),
  unique index booking_info_uk (booking_id)
)
  engine =innodb;

create table harmony.ticket (
  id					int(11)			not null auto_increment,
  booking_info_id		int(11)			not null,
  problem_type_id		int(11)			not null,
  robot_name			varchar(200)	not null,
  title					varchar(250)	not null,
  action_required		varchar(500)    not null,
  ticket_status 		int(11)			not null,
  auto_expire_min		int(11)			not null,
  snoozed_min			int(11)		,
  agent_id				int(11)	,
  assigned_date			timestamp,
  assigned_by_agent_id	int(11)	,
  accepted_date         timestamp,
  closed_date			timestamp,
  agent_notes			varchar(500),
  creation_date         timestamp    	not null default current_timestamp,
  last_modified_date    timestamp    	not null default current_timestamp,
  version             	int(11)   	    not null default '0',
  primary key (id),
  foreign key (booking_info_id) references booking_info(id),
  foreign key (problem_type_id) references problem_type(id),
  foreign key (agent_id) references agent(id),
  foreign key (assigned_by_agent_id) references agent(id),
  index ticket_fk_booking_info (booking_info_id),
  index ticket_fk_problem_type (problem_type_id),
  index ticket_fk_agent (agent_id),
  index ticket_fk_agent_assigned_by (assigned_by_agent_id)
)
  engine =innodb;



insert into `harmony`.`problem_type` (`type_code`, `descr`, `creation_date`, `last_modified_date`, `version`)
	values ('CAPTAIN_NOT_ASSIGNED', 'Captain Not Assigned', now(), now(), 1);
insert into `harmony`.`problem_type` (`type_code`, `descr`, `creation_date`, `last_modified_date`, `version`)
	values ('CAPTAIN_WAITING_WRONG_LOCATION', 'Captain Waiting in Wrong Location', now(), now(), 1);
insert into `harmony`.`problem_type` (`type_code`, `descr`, `creation_date`, `last_modified_date`, `version`)
	values ('NOTES_TO_CAPTAIN', 'Notes to Captain', now(), now(), 1);
insert into `harmony`.`problem_type` (`type_code`, `descr`, `creation_date`, `last_modified_date`, `version`)
	values ('CAPTAIN_MOVING_AWAY', 'Captain Moving Away', now(), now(), 1);
insert into `harmony`.`problem_type` (`type_code`, `descr`, `creation_date`, `last_modified_date`, `version`)
	values ('ASSIGN_CAPTAIN_EARLY', 'Assign Captain Early', now(), now(), 1);
insert into `harmony`.`problem_type` (`type_code`, `descr`, `creation_date`, `last_modified_date`, `version`)
	values ('NOW_BOOKING_NOT_ARRIVED', 'Now Booking Not Arrived', now(), now(), 1);


insert into `harmony`.`ticket_config` (`problem_type_id`, `robot_name`, `action_required`, `auto_expire_min`, `creation_date`, `last_modified_date`, `version`)
	values (1, 'any robot', 'Assign captain to booking', 30, NOW(), NOW(), 1);
insert into `harmony`.`ticket_config` (`problem_type_id`, `robot_name`, `action_required`, `auto_expire_min`, `creation_date`, `last_modified_date`, `version`)
	values (2, 'any robot', 'Call captain and check', 30, NOW(), NOW(), 1);
insert into `harmony`.`ticket_config` (`problem_type_id`, `robot_name`, `action_required`, `auto_expire_min`, `creation_date`, `last_modified_date`, `version`)
	values (3, 'any robot', 'Call captain, possibly re-assign', 30, NOW(), NOW(), 1);
insert into `harmony`.`ticket_config` (`problem_type_id`, `robot_name`, `action_required`, `auto_expire_min`, `creation_date`, `last_modified_date`, `version`)
	values (4, 'any robot', 'Call captain and check, possibly re-assign', 30, NOW(), NOW(), 1);
insert into `harmony`.`ticket_config` (`problem_type_id`, `robot_name`, `action_required`, `auto_expire_min`, `creation_date`, `last_modified_date`, `version`)
	values (5, 'any robot', 'Assign captain to booking', 30, NOW(), NOW(), 1);
insert into `harmony`.`ticket_config` (`problem_type_id`, `robot_name`, `action_required`, `auto_expire_min`, `creation_date`, `last_modified_date`, `version`)
	values (6, 'any robot', 'Call captain and check, possibly re-assign', 30, NOW(), NOW(), 1);
